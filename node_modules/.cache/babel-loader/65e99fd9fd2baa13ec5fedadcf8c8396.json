{"ast":null,"code":"import chroma from\"chroma-js\";export var HUE_MIN=0;export var HUE_MAX=359;export var SATURATION_MIN=0;export var SATURATION_MAX=1;export var VALUE_MIN=0;export var VALUE_MAX=1;export var hueToPercent=function hueToPercent(hue){return hue/HUE_MAX*100;};export var RGBToHex=function RGBToHex(_ref){var red=_ref.red,green=_ref.green,blue=_ref.blue;return chroma.rgb(red,green,blue).hex();};export var hexToRGB=function hexToRGB(hex){var color=chroma(hex).rgb();return{red:color[0],green:color[1],blue:color[2]};};export var RGBToHSV=function RGBToHSV(_ref2){var red=_ref2.red,green=_ref2.green,blue=_ref2.blue;var color=chroma.rgb(red,green,blue).hsv();return{hue:Math.round(color[0]),saturation:color[1],value:color[2]};};export var HSVToRGB=function HSVToRGB(_ref3){var hue=_ref3.hue,saturation=_ref3.saturation,value=_ref3.value;var color=chroma.hsv(hue,saturation,value).rgb();return{red:color[0],green:color[1],blue:color[2]};};export var HueToHex=function HueToHex(hue){var red=0,green=0,blue=0;if(hue<60){// Red - Yellow\nred=255;green=Math.round(hue/60*255);blue=0;}else if(hue<120){// Yellow - Green\nred=255-Math.round((hue-60)/60*255);green=255;blue=0;}else if(hue<180){// Green - Cyan\nred=0;green=255;blue=Math.round((hue-120)/60*255);}else if(hue<240){// Cyan - Blue\nred=0;green=255-Math.round((hue-180)/60*255);blue=255;}else if(hue<300){// Blue - Violet\nred=Math.round((hue-240)/60*255);green=0;blue=255;}else{// Violet - Red\nred=255;green=0;blue=255-Math.round((hue-300)/60*255);}return RGBToHex({red:red,green:green,blue:blue});};","map":{"version":3,"sources":["/Users/alex/color-pickler/src/utils/index.ts"],"names":["chroma","HUE_MIN","HUE_MAX","SATURATION_MIN","SATURATION_MAX","VALUE_MIN","VALUE_MAX","hueToPercent","hue","RGBToHex","red","green","blue","rgb","hex","hexToRGB","color","RGBToHSV","hsv","Math","round","saturation","value","HSVToRGB","HueToHex"],"mappings":"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","sourcesContent":["import chroma from \"chroma-js\";\n\nimport { RGBColor, HSVColor } from \"../types\";\n\nexport const HUE_MIN = 0;\nexport const HUE_MAX = 359;\nexport const SATURATION_MIN = 0;\nexport const SATURATION_MAX = 1;\nexport const VALUE_MIN = 0;\nexport const VALUE_MAX = 1;\n\nexport const hueToPercent = (hue: number): number => {\n  return (hue / HUE_MAX) * 100;\n};\n\nexport const RGBToHex = ({ red, green, blue }: RGBColor): string => {\n  return chroma.rgb(red, green, blue).hex();\n};\n\nexport const hexToRGB = (hex: string): RGBColor => {\n  const color = chroma(hex).rgb();\n\n  return {\n    red: color[0],\n    green: color[1],\n    blue: color[2],\n  };\n};\n\nexport const RGBToHSV = ({ red, green, blue }: RGBColor): HSVColor => {\n  const color = chroma.rgb(red, green, blue).hsv();\n\n  return {\n    hue: Math.round(color[0]),\n    saturation: color[1],\n    value: color[2],\n  };\n};\n\nexport const HSVToRGB = ({ hue, saturation, value }: HSVColor): RGBColor => {\n  const color = chroma.hsv(hue, saturation, value).rgb();\n\n  return {\n    red: color[0],\n    green: color[1],\n    blue: color[2],\n  };\n};\n\nexport const HueToHex = (hue: number): string => {\n  let red = 0,\n    green = 0,\n    blue = 0;\n\n  if (hue < 60) {\n    // Red - Yellow\n    red = 255;\n    green = Math.round((hue / 60) * 255);\n    blue = 0;\n  } else if (hue < 120) {\n    // Yellow - Green\n    red = 255 - Math.round(((hue - 60) / 60) * 255);\n    green = 255;\n    blue = 0;\n  } else if (hue < 180) {\n    // Green - Cyan\n    red = 0;\n    green = 255;\n    blue = Math.round(((hue - 120) / 60) * 255);\n  } else if (hue < 240) {\n    // Cyan - Blue\n    red = 0;\n    green = 255 - Math.round(((hue - 180) / 60) * 255);\n    blue = 255;\n  } else if (hue < 300) {\n    // Blue - Violet\n    red = Math.round(((hue - 240) / 60) * 255);\n    green = 0;\n    blue = 255;\n  } else {\n    // Violet - Red\n    red = 255;\n    green = 0;\n    blue = 255 - Math.round(((hue - 300) / 60) * 255);\n  }\n\n  return RGBToHex({ red, green, blue });\n};\n"]},"metadata":{},"sourceType":"module"}