{"version":3,"sources":["utils/index.ts","utils/ColorPickerProvider.tsx","components/HueSlider/styles.ts","components/HueSlider/index.tsx","components/MatrixSlider/styles.ts","components/MatrixSlider/index.tsx","components/Figures/styles.ts","components/Figures/index.tsx","components/ColorPicker/styles.ts","components/ColorPicker/index.tsx","App.styles.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["HUE_MAX","HSVToRGB","hue","saturation","value","color","chroma","hsv","rgb","red","green","blue","HueToHex","Math","round","hex","RGBToHex","ExampleHSVColor","ExampleRGBColor","ExampleHexColor","colorPickerContextDefault","handleChangeHsv","ColorPickerContext","createContext","ColorPickerProvider","children","useState","setHsv","useCallback","property","Provider","HueSliderContainer","styled","div","props","height","HueSliderHandle","HueSliderHandleCaret","HueSlider","useContext","sliderRef","useRef","handleChangeHue","pageY","current","sliderY","getBoundingClientRect","top","newHue","abs","max","min","handleDrag","e","handleStopDrag","window","removeEventListener","onMouseDown","addEventListener","ref","MatrixSliderContainer","size","MatrixSliderHandle","y","x","MatrixSliderWhiteGradient","MatrixSliderBlackGradient","MatrixSlider","matrixRef","handleChange","pageX","left","matrixX","matrixY","newSaturation","parseFloat","toFixed","newValue","FiguresContainer","FiguresSwatch","FiguresSection","dl","FiguresRow","FiguresLabel","dt","FiguresValue","dd","Figures","ColorPickerContainer","ColorPicker","AppContainer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2bd4894b.chunk.js","sourcesContent":["import chroma from \"chroma-js\";\n\nimport { RGBColor, HSVColor } from \"../types\";\n\nexport const HUE_MIN = 0;\nexport const HUE_MAX = 359;\nexport const SATURATION_MIN = 0;\nexport const SATURATION_MAX = 1;\nexport const VALUE_MIN = 0;\nexport const VALUE_MAX = 1;\n\nexport const hueToPercent = (hue: number): number => {\n  return (hue / HUE_MAX) * 100;\n};\n\nexport const RGBToHex = ({ red, green, blue }: RGBColor): string => {\n  return chroma.rgb(red, green, blue).hex();\n};\n\nexport const hexToRGB = (hex: string): RGBColor => {\n  const color = chroma(hex).rgb();\n\n  return {\n    red: color[0],\n    green: color[1],\n    blue: color[2],\n  };\n};\n\nexport const RGBToHSV = ({ red, green, blue }: RGBColor): HSVColor => {\n  const color = chroma.rgb(red, green, blue).hsv();\n\n  return {\n    hue: Math.round(color[0]),\n    saturation: color[1],\n    value: color[2],\n  };\n};\n\nexport const HSVToRGB = ({ hue, saturation, value }: HSVColor): RGBColor => {\n  const color = chroma.hsv(hue, saturation, value).rgb();\n\n  return {\n    red: color[0],\n    green: color[1],\n    blue: color[2],\n  };\n};\n\nexport const HueToHex = (hue: number): string => {\n  let red = 0,\n    green = 0,\n    blue = 0;\n\n  if (hue < 60) {\n    // Red - Yellow\n    red = 255;\n    green = Math.round((hue / 60) * 255);\n    blue = 0;\n  } else if (hue < 120) {\n    // Yellow - Green\n    red = 255 - Math.round(((hue - 60) / 60) * 255);\n    green = 255;\n    blue = 0;\n  } else if (hue < 180) {\n    // Green - Cyan\n    red = 0;\n    green = 255;\n    blue = Math.round(((hue - 120) / 60) * 255);\n  } else if (hue < 240) {\n    // Cyan - Blue\n    red = 0;\n    green = 255 - Math.round(((hue - 180) / 60) * 255);\n    blue = 255;\n  } else if (hue < 300) {\n    // Blue - Violet\n    red = Math.round(((hue - 240) / 60) * 255);\n    green = 0;\n    blue = 255;\n  } else {\n    // Violet - Red\n    red = 255;\n    green = 0;\n    blue = 255 - Math.round(((hue - 300) / 60) * 255);\n  }\n\n  return RGBToHex({ red, green, blue });\n};\n","// Libraries\nimport { FC, createContext, useState, useCallback } from \"react\";\nimport chroma from \"chroma-js\";\n\n// Utils\nimport { HSVToRGB } from \"./index\";\n\n// Types\nimport { HSVColor, RGBColor } from \"../types\";\n\ninterface ColorPickerContextType {\n  hsv: HSVColor;\n  rgb: RGBColor;\n  hex: string;\n  handleChangeHsv: (property: Partial<HSVColor>) => void;\n}\n\nconst ExampleHSVColor: HSVColor = {\n  hue: 260,\n  saturation: 0.78,\n  value: 0.86,\n};\n\nconst ExampleRGBColor = HSVToRGB(ExampleHSVColor);\n\nconst ExampleHexColor = chroma\n  .hsv(ExampleHSVColor.hue, ExampleHSVColor.saturation, ExampleHSVColor.value)\n  .hex();\n\nconst colorPickerContextDefault = {\n  hsv: ExampleHSVColor,\n  rgb: ExampleRGBColor,\n  hex: ExampleHexColor,\n  handleChangeHsv: () => {},\n};\n\nexport const ColorPickerContext = createContext<ColorPickerContextType>(\n  colorPickerContextDefault\n);\n\nconst ColorPickerProvider: FC = ({ children }) => {\n  const [hsv, setHsv] = useState<HSVColor>(ExampleHSVColor);\n\n  const handleChangeHsv = useCallback(\n    (property: Partial<HSVColor>): void => {\n      setHsv({ ...hsv, ...property });\n    },\n    [hsv]\n  );\n\n  const hex = chroma.hsv(hsv.hue, hsv.saturation, hsv.value).hex();\n\n  return (\n    <ColorPickerContext.Provider\n      value={{\n        hsv,\n        rgb: HSVToRGB(hsv),\n        hex,\n        handleChangeHsv,\n      }}\n    >\n      {children}\n    </ColorPickerContext.Provider>\n  );\n};\n\nexport default ColorPickerProvider;\n","import styled from \"@emotion/styled\";\nimport { hueToPercent } from \"../../utils\";\n\ninterface HueSliderContainerProps {\n  height: number;\n}\n\nexport const HueSliderContainer = styled.div<HueSliderContainerProps>`\n  width: 30px;\n  height: ${(props) => props.height}px;\n  position: relative;\n  border-radius: 3px;\n  background: linear-gradient(\n    0deg,\n    rgba(255, 0, 0, 1) 0%,\n    rgba(255, 255, 0, 1) 16.6667%,\n    rgba(0, 255, 0, 1) 33.3333%,\n    rgba(0, 255, 255, 1) 50%,\n    rgba(0, 0, 255, 1) 66.6667%,\n    rgba(255, 0, 255, 1) 83.3333%,\n    rgba(255, 0, 0, 1) 100%\n  );\n\n  &:hover {\n    cursor: crosshair;\n  }\n`;\n\ninterface HueSliderHandleProps {\n  hue: number;\n}\n\nexport const HueSliderHandle = styled.div<HueSliderHandleProps>`\n  position: absolute;\n  left: 0;\n  bottom: ${(props) => hueToPercent(props.hue)}%;\n  transform: translateY(50%);\n  width: 100%;\n  height: 2px;\n  background-color: #fff;\n  pointer-events: none;\n`;\n\nexport const HueSliderHandleCaret = styled.div`\n  position: absolute;\n  border: 6px solid transparent;\n  top: 50%;\n\n  &:first-of-type {\n    left: 0;\n    border-left-color: #fff;\n    transform: translate(-45%, -50%);\n  }\n\n  &:last-of-type {\n    right: 0;\n    border-right-color: #fff;\n    transform: translate(45%, -50%);\n  }\n`;\n","// Libraries\nimport { FC, MouseEvent as ReactMouseEvent, useContext, useRef } from \"react\";\nimport { ColorPickerContext } from \"../../utils/ColorPickerProvider\";\n\n// Styles\nimport {\n  HueSliderContainer,\n  HueSliderHandle,\n  HueSliderHandleCaret,\n} from \"./styles\";\n\n// Utils\nimport { HUE_MIN, HUE_MAX } from \"utils\";\n\ninterface HueSliderProps {\n  height: number;\n}\n\nconst HueSlider: FC<HueSliderProps> = ({ height }) => {\n  const {\n    hsv: { hue },\n    handleChangeHsv,\n  } = useContext(ColorPickerContext);\n  const sliderRef = useRef<HTMLDivElement>(null);\n\n  const handleChangeHue = (pageY: number): void => {\n    if (!sliderRef.current) {\n      return;\n    }\n    const { top } = sliderRef.current.getBoundingClientRect();\n    const sliderY = pageY - top;\n    const newHue = Math.abs(\n      Math.max(\n        Math.min(Math.round((sliderY / height) * HUE_MAX), HUE_MAX),\n        HUE_MIN\n      ) - HUE_MAX\n    );\n\n    handleChangeHsv({ hue: newHue });\n  };\n\n  const handleDrag = (e: MouseEvent): void => {\n    handleChangeHue(e.pageY);\n  };\n\n  const handleStartDrag = (e: ReactMouseEvent<HTMLDivElement>): void => {\n    handleChangeHue(e.pageY);\n    window.addEventListener(\"mousemove\", handleDrag);\n    window.addEventListener(\"mouseup\", handleStopDrag);\n  };\n\n  const handleStopDrag = (): void => {\n    window.removeEventListener(\"mousemove\", handleDrag);\n    window.removeEventListener(\"mouseup\", handleStopDrag);\n  };\n\n  return (\n    <HueSliderContainer\n      height={height}\n      onMouseDown={handleStartDrag}\n      ref={sliderRef}\n    >\n      <HueSliderHandle hue={hue}>\n        <HueSliderHandleCaret />\n        <HueSliderHandleCaret />\n      </HueSliderHandle>\n    </HueSliderContainer>\n  );\n};\n\nexport default HueSlider;\n","import styled from \"@emotion/styled\";\n\ninterface MatrixSliderContainerProps {\n  color: string;\n  size: number;\n}\n\nexport const MatrixSliderContainer = styled.div<MatrixSliderContainerProps>`\n  width: ${(props) => props.size}px;\n  height: ${(props) => props.size}px;\n  position: relative;\n  background-color: ${(props) => props.color};\n  border-radius: 3px;\n\n  &:hover {\n    cursor: crosshair;\n  }\n`;\n\ninterface MatrixSliderHandleProps {\n  hex: string;\n  x: number;\n  y: number;\n}\n\nexport const MatrixSliderHandle = styled.div<MatrixSliderHandleProps>`\n  pointer-events: none;\n  top: ${(props) => 100 - props.y}%;\n  left: ${(props) => props.x}%;\n  z-index: 10;\n  position: absolute;\n  transform: translate(-50%, -50%);\n  border-radius: 50%;\n  height: 18px;\n  width: 18px;\n  border: 2px solid #fff;\n  background-color: ${(props) => props.hex};\n`;\n\nexport const MatrixSliderWhiteGradient = styled.div`\n  pointer-events: none;\n  z-index: 1;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background: linear-gradient(\n    90deg,\n    rgba(255, 255, 255, 1) 0%,\n    rgba(255, 255, 255, 0) 100%\n  );\n  border-radius: 3px;\n`;\n\nexport const MatrixSliderBlackGradient = styled.div`\n  pointer-events: none;\n  z-index: 2;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background: linear-gradient(0deg, rgba(0, 0, 0, 1) 0%, rgba(0, 0, 0, 0) 100%);\n  border-radius: 3px;\n`;\n","// Libraries\nimport { FC, MouseEvent as ReactMouseEvent, useContext, useRef } from \"react\";\nimport { ColorPickerContext } from \"../../utils/ColorPickerProvider\";\n\n// Styles\nimport {\n  MatrixSliderContainer,\n  MatrixSliderHandle,\n  MatrixSliderBlackGradient,\n  MatrixSliderWhiteGradient,\n} from \"./styles\";\n\n// Utils\nimport { HueToHex } from \"utils\";\n\ninterface MatrixSliderProps {\n  size: number;\n}\n\nconst MatrixSlider: FC<MatrixSliderProps> = ({ size }) => {\n  const {\n    hex,\n    hsv: { hue, saturation, value },\n    handleChangeHsv,\n  } = useContext(ColorPickerContext);\n  const matrixRef = useRef<HTMLDivElement>(null);\n\n  const handleChange = (pageX: number, pageY: number): void => {\n    if (!matrixRef.current) {\n      return;\n    }\n\n    const { top, left } = matrixRef.current.getBoundingClientRect();\n    const matrixX = Math.min(Math.max(pageX - left, 0), size);\n    const matrixY = size - Math.min(Math.max(pageY - top, 0), size);\n\n    const newSaturation = parseFloat((matrixX / size).toFixed(2));\n    const newValue = parseFloat((matrixY / size).toFixed(2));\n\n    handleChangeHsv({ saturation: newSaturation, value: newValue });\n  };\n\n  const handleDrag = ({ pageX, pageY }: MouseEvent): void => {\n    handleChange(pageX, pageY);\n  };\n\n  const handleStartDrag = ({\n    pageX,\n    pageY,\n  }: ReactMouseEvent<HTMLDivElement>): void => {\n    handleChange(pageX, pageY);\n    window.addEventListener(\"mousemove\", handleDrag);\n    window.addEventListener(\"mouseup\", handleStopDrag);\n  };\n\n  const handleStopDrag = (): void => {\n    window.removeEventListener(\"mousemove\", handleDrag);\n    window.removeEventListener(\"mouseup\", handleStopDrag);\n  };\n\n  const x = saturation * 100;\n  const y = value * 100;\n\n  return (\n    <MatrixSliderContainer\n      color={HueToHex(hue)}\n      size={size}\n      onMouseDown={handleStartDrag}\n      ref={matrixRef}\n    >\n      <MatrixSliderHandle x={x} y={y} hex={hex} />\n      <MatrixSliderWhiteGradient />\n      <MatrixSliderBlackGradient />\n    </MatrixSliderContainer>\n  );\n};\n\nexport default MatrixSlider;\n","import styled from \"@emotion/styled\";\n\ninterface FiguresContainerProps {\n  height: number;\n}\n\nexport const FiguresContainer = styled.div<FiguresContainerProps>`\n  height: ${(props) => props.height}px;\n  width: 130px;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n`;\n\ninterface FiguresSwatchProps {\n  hex: string;\n}\n\nexport const FiguresSwatch = styled.div<FiguresSwatchProps>`\n  width: 130px;\n  flex: 1 0 130px;\n  border-radius: 3px;\n  margin-bottom: 4px;\n  background-color: ${(props) => props.hex};\n`;\n\nexport const FiguresSection = styled.dl`\n  border-radius: 3px;\n  background-color: #222;\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: stretch;\n  margin-bottom: 4px;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport const FiguresRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 4px;\n  align-items: center;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport const FiguresLabel = styled.dt`\n  color: #666;\n  font-size: 11px;\n  font-weight: bold;\n  text-transform: uppercase;\n  user-select: none;\n`;\n\nexport const FiguresValue = styled.dd`\n  font-size: 13px;\n  font-family: monospace;\n  text-transform: uppercase;\n  user-select: none;\n`;\n","// Libraries\nimport { FC, useContext } from \"react\";\n\n// Components\nimport { ColorPickerContext } from \"../../utils/ColorPickerProvider\";\n\n// Styles\nimport {\n  FiguresContainer,\n  FiguresSwatch,\n  FiguresSection,\n  FiguresRow,\n  FiguresLabel,\n  FiguresValue,\n} from \"./styles\";\n\ninterface FiguresProps {\n  height: number;\n}\n\nconst Figures: FC<FiguresProps> = ({ height }) => {\n  const { hsv, rgb, hex } = useContext(ColorPickerContext);\n  return (\n    <FiguresContainer height={height}>\n      <FiguresSwatch hex={hex} />\n      <FiguresSection>\n        <FiguresRow>\n          <FiguresLabel>Hue</FiguresLabel>\n          <FiguresValue>{hsv.hue}&deg;</FiguresValue>\n        </FiguresRow>\n        <FiguresRow>\n          <FiguresLabel>Saturation</FiguresLabel>\n          <FiguresValue>{Math.round(hsv.saturation * 100)}</FiguresValue>\n        </FiguresRow>\n        <FiguresRow>\n          <FiguresLabel>Value</FiguresLabel>\n          <FiguresValue>{Math.round(hsv.value * 100)}</FiguresValue>\n        </FiguresRow>\n      </FiguresSection>\n      <FiguresSection>\n        <FiguresRow>\n          <FiguresLabel>Red</FiguresLabel>\n          <FiguresValue>{rgb.red}</FiguresValue>\n        </FiguresRow>\n        <FiguresRow>\n          <FiguresLabel>Green</FiguresLabel>\n          <FiguresValue>{rgb.green}</FiguresValue>\n        </FiguresRow>\n        <FiguresRow>\n          <FiguresLabel>Blue</FiguresLabel>\n          <FiguresValue>{rgb.blue}</FiguresValue>\n        </FiguresRow>\n      </FiguresSection>\n      <FiguresSection>\n        <FiguresRow>\n          <FiguresLabel>Hex</FiguresLabel>\n          <FiguresValue>{hex}</FiguresValue>\n        </FiguresRow>\n      </FiguresSection>\n    </FiguresContainer>\n  );\n};\n\nexport default Figures;\n","import styled from \"@emotion/styled\";\n\nexport const ColorPickerContainer = styled.div`\n  width: 600px;\n  display: flex;\n  align-items: center;\n\n  & > div {\n    margin: 10px;\n  }\n`;\n","// Libraries\nimport { FC } from \"react\";\n\n// Components\nimport HueSlider from \"../HueSlider\";\nimport MatrixSlider from \"../MatrixSlider\";\nimport Figures from \"../Figures\";\n\n// Styles\nimport { ColorPickerContainer } from \"./styles\";\n\nconst ColorPicker: FC = () => {\n  return (\n    <ColorPickerContainer>\n      <MatrixSlider size={360} />\n      <HueSlider height={360} />\n      <Figures height={360} />\n    </ColorPickerContainer>\n  );\n};\n\nexport default ColorPicker;\n","// Libraries\nimport styled from \"@emotion/styled\";\n\nexport const AppContainer = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n  height: 100%;\n  width: 100%;\n  overflow: auto;\n`;\n","// Libraries\nimport { FC } from \"react\";\n\n// Components\nimport ColorPicker from \"./components/ColorPicker\";\nimport ColorPickerProvider from \"./utils/ColorPickerProvider\";\n\n// Styles\nimport { AppContainer } from \"./App.styles\";\n\nconst App: FC = () => {\n  return (\n    <ColorPickerProvider>\n      <AppContainer>\n        <ColorPicker />\n      </AppContainer>\n    </ColorPickerProvider>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}